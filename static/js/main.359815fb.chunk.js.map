{"version":3,"sources":["components/Display/Display.js","components/Button/Button.js","components/Random/Random.js","components/App/App.js","index.js"],"names":["Display","react_default","a","createElement","this","props","number","Component","Button","generateNumber","_this","generate","onClick","Random","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","generateRandomNumber","newNumber","Math","random","setState","prevState","randomNumber","state","className","components_Display_Display","components_Button_Button","App","components_Random_Random","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"yNAUeA,mLANP,OACGC,EAAAC,EAAAC,cAAA,WAAMC,KAAKC,MAAMC,eAHNC,aCiBPC,6MAdZC,eAAiB,WACfC,EAAKL,MAAMM,oFAKR,OACIV,EAAAC,EAAAC,cAAA,UAAQS,QAASR,KAAKK,gBAAtB,4BAVSF,aCmCNM,qBA7BX,SAAAA,IAAc,IAAAH,EAAA,OAAAI,OAAAC,EAAA,EAAAD,CAAAV,KAAAS,IACVH,EAAAI,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAd,QAMRe,qBAAuB,WACpB,IAAMC,EAAYC,KAAKC,SAEvBZ,EAAKa,SAAS,SAACC,GAAD,MAAgB,CAC7BC,aAAcD,EAAUC,aAAeL,MARnCV,EAAKgB,MAAQ,CACTD,aAAc,GAJRf,mFAgBdN,KAAKe,wDAID,OACIlB,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,oBACb1B,EAAAC,EAAAC,cAACyB,EAAD,CAAStB,OAAQF,KAAKsB,MAAMD,eAC5BxB,EAAAC,EAAAC,cAAC0B,EAAD,CAAQlB,SAAUP,KAAKe,+BAzBhBZ,cCMNuB,mLANP,OACI7B,EAAAC,EAAAC,cAAC4B,EAAD,aAHMxB,aCElByB,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.359815fb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Display extends Component {\r\n    render () {\r\n        return (\r\n           <div>{this.props.number}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Display;","import React, {Component} from 'react';\r\n\r\nclass Button extends Component {\r\n\r\n//    ta funkcja wywołuje tego callbacka poniżej, to jest przekazywanie propsów do góry\r\n   generateNumber = () => {\r\n     this.props.generate();\r\n   }\r\n   \r\n   \r\n    render () {\r\n        return (\r\n            <button onClick={this.generateNumber}>\r\n            Losuj liczbę\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\n\r\nimport Display from '../Display/Display';\r\nimport Button from '../Button/Button';\r\nimport '../Random/Random.css';\r\n\r\nclass Random extends Component {\r\n    // czysty stan bez propsów\r\n    constructor() {\r\n        super();\r\n// state jest przechowalnią dla naszych zmiennych\r\n        this.state = {\r\n            randomNumber: 0\r\n             }\r\n    }\r\ngenerateRandomNumber = () => {\r\n   const newNumber = Math.random();\r\n\r\n   this.setState((prevState) => ({\r\n    randomNumber: prevState.randomNumber + newNumber\r\n   }));\r\n}\r\n// DidMount - czyli po załadowaniu strony\r\ncomponentDidMount () {\r\n    this.generateRandomNumber();\r\n}\r\n\r\n    render () {\r\n        return (\r\n            <div className='random-container'>\r\n              <Display number={this.state.randomNumber}/>\r\n              <Button generate={this.generateRandomNumber}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Random;","import React, {Component} from 'react';\r\n\r\nimport Random from '../Random/Random';\r\n\r\nclass App extends Component {\r\n    render () {\r\n        return (\r\n            <Random/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}